package com.example.greendao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.example.stockx.bean.AccountDataBean;
import com.example.stockx.bean.BondsDataBean;
import com.example.stockx.bean.PresetBondsDataBean;
import com.example.stockx.bean.SettingBean;

import com.example.greendao.AccountDataBeanDao;
import com.example.greendao.BondsDataBeanDao;
import com.example.greendao.PresetBondsDataBeanDao;
import com.example.greendao.SettingBeanDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig accountDataBeanDaoConfig;
    private final DaoConfig bondsDataBeanDaoConfig;
    private final DaoConfig presetBondsDataBeanDaoConfig;
    private final DaoConfig settingBeanDaoConfig;

    private final AccountDataBeanDao accountDataBeanDao;
    private final BondsDataBeanDao bondsDataBeanDao;
    private final PresetBondsDataBeanDao presetBondsDataBeanDao;
    private final SettingBeanDao settingBeanDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        accountDataBeanDaoConfig = daoConfigMap.get(AccountDataBeanDao.class).clone();
        accountDataBeanDaoConfig.initIdentityScope(type);

        bondsDataBeanDaoConfig = daoConfigMap.get(BondsDataBeanDao.class).clone();
        bondsDataBeanDaoConfig.initIdentityScope(type);

        presetBondsDataBeanDaoConfig = daoConfigMap.get(PresetBondsDataBeanDao.class).clone();
        presetBondsDataBeanDaoConfig.initIdentityScope(type);

        settingBeanDaoConfig = daoConfigMap.get(SettingBeanDao.class).clone();
        settingBeanDaoConfig.initIdentityScope(type);

        accountDataBeanDao = new AccountDataBeanDao(accountDataBeanDaoConfig, this);
        bondsDataBeanDao = new BondsDataBeanDao(bondsDataBeanDaoConfig, this);
        presetBondsDataBeanDao = new PresetBondsDataBeanDao(presetBondsDataBeanDaoConfig, this);
        settingBeanDao = new SettingBeanDao(settingBeanDaoConfig, this);

        registerDao(AccountDataBean.class, accountDataBeanDao);
        registerDao(BondsDataBean.class, bondsDataBeanDao);
        registerDao(PresetBondsDataBean.class, presetBondsDataBeanDao);
        registerDao(SettingBean.class, settingBeanDao);
    }
    
    public void clear() {
        accountDataBeanDaoConfig.clearIdentityScope();
        bondsDataBeanDaoConfig.clearIdentityScope();
        presetBondsDataBeanDaoConfig.clearIdentityScope();
        settingBeanDaoConfig.clearIdentityScope();
    }

    public AccountDataBeanDao getAccountDataBeanDao() {
        return accountDataBeanDao;
    }

    public BondsDataBeanDao getBondsDataBeanDao() {
        return bondsDataBeanDao;
    }

    public PresetBondsDataBeanDao getPresetBondsDataBeanDao() {
        return presetBondsDataBeanDao;
    }

    public SettingBeanDao getSettingBeanDao() {
        return settingBeanDao;
    }

}
